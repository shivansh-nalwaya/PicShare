{"version":3,"sources":["styles/Home.js","styles/Navbar.js","models/PictureModel.js","components/Navbar.js","styles/UploadModal.js","components/UploadModal.js","styles/PictureCard.js","components/PictureCard.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","Logo","Navbar_templateObject","Nav","_templateObject2","PICTURE_INSTANCE","PictureModel","_this","this","Object","classCallCheck","addPic","image","new_data","data","concat","Image","timestamp","Date","title","localStorage","setItem","JSON","stringify","sortPics","deletePic","index","pics","splice","searchImage","text","searchData","parse","getItem","filter","d","toLowerCase","startsWith","slice","sort","x","y","extendObservable","Navbar","react_default","a","createElement","row","type","justify","align","col","span","lg","md","sm","xs","input","placeholder","onChange","e","target","value","prefix","icon","style","color","es_button","size","onClick","props","showModal","Component","Centerify","UploadModal_templateObject","UploadModal","possibleConstructorReturn","getPrototypeOf","call","handleUpload","url","file","result","fileList","handleCancel","actionFileUpload","Promise","resolve","reject","reader","FileReader","onload","onerror","error","readAsDataURL","assertThisInitialized","_this2","modal","visible","onCancel","footer","key","upload","f","status","name","substring","action","paddingTop","observer","Picture","PictureCard_templateObject","Caption","PictureCard_templateObject2","Description","_templateObject3","Thumbnail","_templateObject4","PictureCard","pic","shape","timeAgo","App","modalVisible","search","Navbar_Navbar","components_UploadModal","handleOk","map","PictureCard_PictureCard","AppRouter","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5e25b8f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: #efefef;\n  min-height: 89vh;\n`;\n","import styled from \"styled-components\";\n\nexport const Logo = styled.div`\n  font-size: 2em;\n`;\n\nexport const Nav = styled.div`\n  padding-top: 1em;\n  padding-bottom: 1em;\n  border-bottom: 1px solid #eeeeee;\n`;\n","import { extendObservable } from \"mobx\";\n\nclass PictureModel {\n  constructor() {\n    extendObservable(this, {\n      data: this.sortPics(JSON.parse(localStorage.getItem(\"img_data\")) || [])\n    });\n  }\n\n  addPic = image => {\n    let new_data = this.data.concat({\n      Image: image.Image,\n      timestamp: new Date(),\n      title: image.title\n    });\n    localStorage.setItem(\"img_data\", JSON.stringify(new_data));\n    this.data = this.sortPics(new_data);\n  };\n\n  deletePic = index => {\n    let pics = this.data;\n    pics.splice(index, 1);\n    localStorage.setItem(\"img_data\", JSON.stringify(pics));\n    this.data = this.sortPics(pics);\n  };\n\n  searchImage = text => {\n    let searchData = JSON.parse(localStorage.getItem(\"img_data\")).filter(d => {\n      if (text === \"\") return true;\n      return d.title.toLowerCase().startsWith(text.toLowerCase());\n    });\n    this.data = this.sortPics(searchData);\n  };\n\n  sortPics = data => {\n    return data.slice().sort(function(x, y) {\n      return Date.parse(y.timestamp) - Date.parse(x.timestamp);\n    });\n  };\n}\n\nconst PICTURE_INSTANCE = new PictureModel();\n\nexport default PICTURE_INSTANCE;\n","import React, { Component } from \"react\";\nimport { Icon, Button, Row, Input, Col } from \"antd\";\nimport { Logo, Nav } from \"../styles/Navbar\";\nimport PictureModel from \"../models/PictureModel\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <Nav>\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n          <Col span={2}>\n            <Logo>PicShare</Logo>\n          </Col>\n          <Col lg={8} md={8} sm={8} xs={0}>\n            <Input\n              placeholder=\"Search\"\n              onChange={e => PictureModel.searchImage(e.target.value)}\n              prefix={\n                <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n              }\n            />\n          </Col>\n          <Col span={8}>\n            <Row>\n              <Col span={4}>\n                <Button size=\"large\" icon=\"plus\" onClick={this.props.showModal}>\n                  Upload Image\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Nav>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Centerify = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 1em;\n  padding-bottom: 1em;\n`;\n","import React, { Component } from \"react\";\nimport { Icon, Button, Row, Modal, Input, Col, Upload } from \"antd\";\nimport { extendObservable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport { Centerify } from \"../styles/UploadModal\";\nimport PictureModel from \"../models/PictureModel\";\n\nclass UploadModal extends Component {\n  constructor(props) {\n    super(props);\n    extendObservable(this, {\n      url: \"\",\n      title: \"\",\n      file: \"\",\n      fileList: []\n    });\n  }\n\n  handleUpload = () => {\n    PictureModel.addPic({\n      Image: this.url || this.file.result,\n      title: this.title\n    });\n    this.fileList = [];\n    this.url = \"\";\n    this.title = \"\";\n    this.props.handleCancel();\n  };\n\n  actionFileUpload = e => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve();\n      reader.onerror = error => reject(error);\n      reader.readAsDataURL(e);\n      this.file = reader;\n      this.url = \"\";\n    });\n  };\n\n  render() {\n    return (\n      <Modal\n        title=\"Upload Image\"\n        visible={this.props.visible}\n        onCancel={this.props.handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={this.props.handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"upload\" type=\"primary\" onClick={this.handleUpload}>\n            Upload\n          </Button>\n        ]}\n      >\n        <Row type=\"flex\" justify=\"center\" align=\"middle\">\n          <Col lg={8} md={8} sm={22} xs={22}>\n            <Centerify>\n              <Upload\n                fileList={this.fileList}\n                onChange={e => {\n                  let f = e.file;\n                  f.status = \"done\";\n                  f.error = null;\n                  f.name = f.name.substring(0, 10) + \"...\";\n                  this.fileList = [f];\n                }}\n                action={this.actionFileUpload}\n              >\n                <Button>\n                  <Icon type=\"upload\" /> Click to Upload\n                </Button>\n              </Upload>\n            </Centerify>\n          </Col>\n          <Col lg={2} md={2} sm={22} xs={22}>\n            <Centerify>OR</Centerify>\n          </Col>\n          <Col lg={12} md={12} sm={22} xs={22}>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter URL of the image\"\n              value={this.url}\n              onChange={e => {\n                this.url = e.target.value;\n              }}\n            />\n          </Col>\n        </Row>\n        <Row\n          type=\"flex\"\n          justify=\"center\"\n          align=\"middle\"\n          style={{ paddingTop: \"1em\" }}\n        >\n          <Col span={22}>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter Title\"\n              value={this.title}\n              onChange={e => {\n                this.title = e.target.value;\n              }}\n            />\n          </Col>\n        </Row>\n      </Modal>\n    );\n  }\n}\n\nexport default observer(UploadModal);\n","import styled from \"styled-components\";\n\nexport const Picture = styled.div`\n  margin: 0.8em 0.8em;\n  width: 28em;\n  max-width: 28em;\n  border: 12px solid white;\n`;\n\nexport const Caption = styled.div`\n  div {\n    @import url(\"https://fonts.googleapis.com/css?family=Indie+Flower\");\n    font-family: \"Indie Flower\", cursive;\n  }\n  background-color: white;\n  padding-top: 0.6em;\n  font-size: 20px;\n  font-family: \"Indie Flower\", cursive;\n  font-weight: bold;\n`;\n\nexport const Description = styled.div`\n  font-weight: normal;\n  font-size: 16px;\n`;\n\nexport const Thumbnail = styled.div`\n  background-image: ${props => props.url || \"\"};\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 26.2em;\n  height: 27.84em;\n`;\n","import React, { Component } from \"react\";\nimport { Button, Row } from \"antd\";\nimport timeAgo from \"node-time-ago\";\nimport {\n  Picture,\n  Thumbnail,\n  Caption,\n  Description\n} from \"../styles/PictureCard\";\n\nexport default class PictureCard extends Component {\n  render() {\n    return (\n      <Picture>\n        <Thumbnail url={`url(${this.props.pic.Image})`} />\n        <Caption>\n          <Row type=\"flex\" justify=\"space-between\">\n            {this.props.pic.title}\n            <Button\n              shape=\"circle\"\n              icon=\"delete\"\n              type=\"danger\"\n              onClick={this.props.onClick}\n            />\n          </Row>\n          <Description>{timeAgo(this.props.pic.timestamp)}</Description>\n        </Caption>\n      </Picture>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Container } from \"../styles/Home\";\nimport Navbar from \"../components/Navbar\";\nimport UploadModal from \"../components/UploadModal\";\nimport PictureCard from \"../components/PictureCard\";\nimport PictureModel from \"../models/PictureModel\";\nimport { extendObservable } from \"mobx\";\nimport { Col, Row } from \"antd\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    extendObservable(this, {\n      modalVisible: false,\n      search: \"\"\n    });\n  }\n\n  showModal = () => {\n    this.modalVisible = true;\n  };\n\n  handleCancel = e => {\n    this.modalVisible = false;\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar showModal={this.showModal} />\n        <Container>\n          <UploadModal\n            visible={this.modalVisible}\n            handleCancel={this.handleCancel}\n            handleOk={this.handleOk}\n          />\n          <Row type=\"flex\" justify=\"start\">\n            {PictureModel.data.map((pic, index) => (\n              <Col lg={8} md={12} sm={24} xs={24} key={index}>\n                <PictureCard\n                  pic={pic}\n                  onClick={() => {\n                    PictureModel.deletePic(index);\n                  }}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","import React from \"react\";\nimport Home from \"./pages/Home\";\n\nconst AppRouter = () => <Home />;\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}