{"version":3,"sources":["styles/Home.js","styles/Navbar.js","queries/PictureQueries.js","Constants.js","models/PictureModel.js","components/Navbar.js","components/UploadModal.js","styles/PictureCard.js","components/PictureCard.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","_templateObject","Logo","Navbar_templateObject","Nav","_templateObject2","client","GraphQLClient","getImages","request","PICTURE_INSTANCE","PictureModel","_this","this","Object","classCallCheck","addPic","image","concat","title","Image","Date","setItem","then","res","data","allImages","deletePic","id","deleteItem","searchImage","text","searchData","JSON","parse","localStorage","getItem","filter","d","toLowerCase","startsWith","sortPics","slice","sort","x","y","timestamp","extendObservable","Navbar","react_default","a","createElement","row","type","justify","align","col","span","input","placeholder","onChange","e","target","value","prefix","icon","style","color","es_button","size","onClick","props","showModal","Component","UploadModal","possibleConstructorReturn","getPrototypeOf","call","handleUpload","url","file","result","fileList","handleCancel","actionFileUpload","Promise","resolve","reject","reader","FileReader","onload","onerror","error","readAsDataURL","assertThisInitialized","_this2","modal","visible","onCancel","footer","key","upload","status","action","paddingTop","observer","Picture","PictureCard_templateObject","Thumbnail","PictureCard_templateObject2","Meta","PictureCard","card","cover","pic","imageData","shape","description","timeAgo","App","modalVisible","search","Navbar_Navbar","components_UploadModal","handleOk","map","PictureCard_PictureCard","AppRouter","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2XAEO,IAAMA,EAAYC,IAAOC,IAAVC,2UCAf,IAAMC,EAAOH,IAAOC,IAAVG,KAIJC,EAAML,IAAOC,IAAVK,aCHVC,EAAS,WAAIC,eCFjB,8DDIWC,EAAY,WACvB,OAAOF,EAAOG,QAAP,2JEyCMC,EAFU,IAzCvB,SAAAC,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KAUdG,OAAS,SAAAC,IFIY,SAAAA,GACrB,OAAOX,EAAOG,QAAP,yDAAAS,OAGSD,EAAME,MAHf,2BAAAD,OAIaD,EAAMG,MAJnB,2BAAAF,OAKa,IAAIG,KALjB,kDEJLC,CAAQL,GAAOM,KAAK,SAAAC,GAClBhB,IAAYe,KAAK,SAAAC,GACfZ,EAAKa,KAAOD,EAAIE,eAbRb,KAkBdc,UAAY,SAAAC,IFUY,SAAAA,GACxB,OAAOtB,EAAOG,QAAP,4CAAAS,OAEgBU,EAFhB,0CEVLC,CAAWD,GAAIL,KAAK,SAAAC,GAClBhB,IAAYe,KAAK,SAAAC,GACfZ,EAAKa,KAAOD,EAAIE,eArBRb,KA0BdiB,YAAc,SAAAC,GACZ,IAAIC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,aAAaC,OAAO,SAAAC,GACnE,MAAa,KAATP,GACGO,EAAEnB,MAAMoB,cAAcC,WAAWT,EAAKQ,iBAE/C3B,EAAKa,KAAOb,EAAK6B,SAAST,IA/BdnB,KAkCd4B,SAAW,SAAAhB,GACT,OAAOA,EAAKiB,QAAQC,KAAK,SAASC,EAAGC,GACnC,OAAOxB,KAAKa,MAAMW,EAAEC,WAAazB,KAAKa,MAAMU,EAAEE,cAnChDC,YAAiBlC,KAAM,CACrBY,KAAM,KAGRjB,IAAYe,KAAK,SAAAC,GACfZ,EAAKa,KAAOD,EAAIE,aCLDsB,mLAEjB,OACEC,EAAAC,EAAAC,cAAC/C,EAAD,KACE6C,EAAAC,EAAAC,cAAAC,EAAA,GAAKC,KAAK,OAAOC,QAAQ,eAAeC,MAAM,UAC5CN,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,GACTR,EAAAC,EAAAC,cAACjD,EAAD,kBAEF+C,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,GACTR,EAAAC,EAAAC,cAAAO,EAAA,GACEC,YAAY,SACZC,SAAU,SAAAC,GAAC,OAAIlD,EAAamB,YAAY+B,EAAEC,OAAOC,QACjDC,OACEf,EAAAC,EAAAC,cAAAc,EAAA,GAAMZ,KAAK,SAASa,MAAO,CAAEC,MAAO,wBAI1ClB,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,GACTR,EAAAC,EAAAC,cAAAC,EAAA,OACEH,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,GACTR,EAAAC,EAAAC,cAAAiB,EAAA,GAAQC,KAAK,QAAQJ,KAAK,OAAOK,QAASzD,KAAK0D,MAAMC,WAArD,4BApBoBC,iDCC9BC,cACJ,SAAAA,EAAYH,GAAO,IAAA3D,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA6D,IACjB9D,EAAAE,OAAA6D,EAAA,EAAA7D,CAAAD,KAAAC,OAAA8D,EAAA,EAAA9D,CAAA4D,GAAAG,KAAAhE,KAAM0D,KASRO,aAAe,WACbnE,EAAaK,OAAO,CAClBI,MAAOR,EAAKmE,KAAOnE,EAAKoE,KAAKC,OAC7B9D,MAAOP,EAAKO,QAEdP,EAAKsE,SAAW,GAChBtE,EAAKmE,IAAM,GACXnE,EAAKO,MAAQ,GACbP,EAAK2D,MAAMY,gBAlBMvE,EAqBnBwE,iBAAmB,SAAAvB,GACjB,OAAO,IAAIwB,QAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,kBAAMJ,KACtBE,EAAOG,QAAU,SAAAC,GAAK,OAAIL,EAAOK,IACjCJ,EAAOK,cAAchC,GACrBjD,EAAKoE,KAAOQ,EACZ5E,EAAKmE,IAAM,MA1BbhC,YAAiBjC,OAAAgF,EAAA,EAAAhF,QAAAgF,EAAA,EAAAhF,CAAAF,IAAM,CACrBmE,IAAK,GACL5D,MAAO,GACP6D,KAAM,GACNE,SAAU,KANKtE,wEAgCV,IAAAmF,EAAAlF,KACP,OACEoC,EAAAC,EAAAC,cAAA6C,EAAA,GACE7E,MAAM,eACN8E,QAASpF,KAAK0D,MAAM0B,QACpBC,SAAUrF,KAAK0D,MAAMY,aACrBgB,OAAQ,CACNlD,EAAAC,EAAAC,cAAAiB,EAAA,GAAQgC,IAAI,SAAS9B,QAASzD,KAAK0D,MAAMY,cAAzC,UAGAlC,EAAAC,EAAAC,cAAAiB,EAAA,GAAQgC,IAAI,SAAS/C,KAAK,UAAUiB,QAASzD,KAAKiE,cAAlD,YAKF7B,EAAAC,EAAAC,cAAAC,EAAA,GAAKC,KAAK,OAAOC,QAAQ,SAASC,MAAM,UACtCN,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,GACTR,EAAAC,EAAAC,cAAAkD,EAAA,GACEnB,SAAUrE,KAAKqE,SACftB,SAAU,SAAAC,GACRA,EAAEmB,KAAKsB,OAAS,OAChBzC,EAAEmB,KAAKY,MAAQ,KACfG,EAAKb,SAAW,CAACrB,EAAEmB,OAErBuB,OAAQ1F,KAAKuE,kBAEbnC,EAAAC,EAAAC,cAAAiB,EAAA,OACEnB,EAAAC,EAAAC,cAAAc,EAAA,GAAMZ,KAAK,WADb,sBAKJJ,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,GAAX,MACAR,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,IACTR,EAAAC,EAAAC,cAAAO,EAAA,GACEL,KAAK,OACLM,YAAY,yBACZI,MAAOlD,KAAKkE,IACZnB,SAAU,SAAAC,GACRkC,EAAKhB,IAAMlB,EAAEC,OAAOC,WAK5Bd,EAAAC,EAAAC,cAAAC,EAAA,GACEC,KAAK,OACLC,QAAQ,SACRC,MAAM,SACNW,MAAO,CAAEsC,WAAY,QAErBvD,EAAAC,EAAAC,cAAAK,EAAA,GAAKC,KAAM,IACTR,EAAAC,EAAAC,cAAAO,EAAA,GACEL,KAAK,OACLM,YAAY,cACZI,MAAOlD,KAAKM,MACZyC,SAAU,SAAAC,GACRkC,EAAK5E,MAAQ0C,EAAEC,OAAOC,mBAxFZU,aAkGXgC,cAAS/B,qbCtGjB,IAAMgC,EAAU3G,IAAOC,IAAV2G,KAMPC,EAAY7G,IAAOC,IAAV6G,IACA,SAAAtC,GAAK,OAAIA,EAAMQ,KAAO,KCLpC+B,WAEaC,mLAEjB,OACE9D,EAAAC,EAAAC,cAACuD,EAAD,KACEzD,EAAAC,EAAAC,cAAA6D,EAAA,GAAMC,MAAOhE,EAAAC,EAAAC,cAACyD,EAAD,CAAW7B,IAAG,OAAA7D,OAASL,KAAK0D,MAAM2C,IAAIC,UAAxB,QACzBlE,EAAAC,EAAAC,cAAC2D,EAAD,CACE3F,MACE8B,EAAAC,EAAAC,cAAAC,EAAA,GAAKC,KAAK,OAAOC,QAAQ,iBACtBzC,KAAK0D,MAAM2C,IAAI/F,MAChB8B,EAAAC,EAAAC,cAAAiB,EAAA,GACEgD,MAAM,SACNnD,KAAK,SACLZ,KAAK,SACLiB,QAASzD,KAAK0D,MAAMD,WAI1B+C,YAAaC,IAAQzG,KAAK0D,MAAM2C,IAAIpE,sBAjBP2B,aCGnC8C,cACJ,SAAAA,EAAYhD,GAAO,IAAA3D,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA0G,IACjB3G,EAAAE,OAAA6D,EAAA,EAAA7D,CAAAD,KAAAC,OAAA8D,EAAA,EAAA9D,CAAAyG,GAAA1C,KAAAhE,KAAM0D,KAORC,UAAY,WACV5D,EAAK4G,cAAe,GATH5G,EAYnBuE,aAAe,SAAAtB,GACbjD,EAAK4G,cAAe,GAXpBzE,YAAiBjC,OAAAgF,EAAA,EAAAhF,QAAAgF,EAAA,EAAAhF,CAAAF,IAAM,CACrB4G,cAAc,EACdC,OAAQ,KAJO7G,wEAiBjB,OACEqC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuE,EAAD,CAAQlD,UAAW3D,KAAK2D,YACxBvB,EAAAC,EAAAC,cAACrD,EAAD,KACEmD,EAAAC,EAAAC,cAACwE,EAAD,CACE1B,QAASpF,KAAK2G,aACdrC,aAActE,KAAKsE,aACnByC,SAAU/G,KAAK+G,WAEhBjH,EAAac,KAAKoG,IAAI,SAAAX,GAAG,OACxBjE,EAAAC,EAAAC,cAAC2E,EAAD,CACE1B,IAAKc,EAAItF,GACTsF,IAAKA,EACL5C,QAAS,WACP3D,EAAagB,UAAUuF,EAAItF,kBAhCzB6C,aA0CHgC,cAASc,GC9CTQ,EAFG,kBAAM9E,EAAAC,EAAAC,cAAC6E,EAAD,OCSJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECZNC,IAASC,OAAOtF,EAAAC,EAAAC,cAACqF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtH,KAAK,SAAAuH,GACjCA,EAAaC","file":"static/js/main.903d9476.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding-top: 2em;\n  padding-left: 1em;\n`;\n","import styled from \"styled-components\";\n\nexport const Logo = styled.div`\n  font-size: 2em;\n`;\n\nexport const Nav = styled.div`\n  padding-top: 1em;\n  padding-bottom: 1em;\n  border-bottom: 1px solid #eeeeee;\n`;\n","import { GraphQLClient } from \"graphql-request\";\nimport { GraphQLEndpoint } from \"../Constants\";\n\nconst client = new GraphQLClient(GraphQLEndpoint);\n\nexport const getImages = () => {\n  return client.request(`\n    {\n        allImages(orderBy: timestamp_DESC) {\n          id\n          title\n          imageData\n          timestamp\n        }\n      }\n  `);\n};\n\nexport const setItem = image => {\n  return client.request(`\n    mutation {\n      createImage(\n        title: \"${image.title}\"\n        imageData: \"${image.Image}\"\n        timestamp: \"${new Date()}\"\n      ) {\n        id\n      }\n    }\n  `);\n};\n\nexport const deleteItem = id => {\n  return client.request(`\n    mutation {\n      deleteImage(id: \"${id}\") {\n        id\n      }\n    }\n  `);\n};\n","export const GraphQLEndpoint =\n  \"https://api.graph.cool/simple/v1/cjp4oi01mn6mq0198mt1o5fq1\";\n","import { extendObservable } from \"mobx\";\nimport { getImages, setItem, deleteItem } from \"../queries/PictureQueries\";\n\nclass PictureModel {\n  constructor() {\n    extendObservable(this, {\n      data: []\n    });\n\n    getImages().then(res => {\n      this.data = res.allImages;\n    });\n  }\n\n  addPic = image => {\n    setItem(image).then(res => {\n      getImages().then(res => {\n        this.data = res.allImages;\n      });\n    });\n  };\n\n  deletePic = id => {\n    deleteItem(id).then(res => {\n      getImages().then(res => {\n        this.data = res.allImages;\n      });\n    });\n  };\n\n  searchImage = text => {\n    let searchData = JSON.parse(localStorage.getItem(\"img_data\")).filter(d => {\n      if (text === \"\") return true;\n      return d.title.toLowerCase().startsWith(text.toLowerCase());\n    });\n    this.data = this.sortPics(searchData);\n  };\n\n  sortPics = data => {\n    return data.slice().sort(function(x, y) {\n      return Date.parse(y.timestamp) - Date.parse(x.timestamp);\n    });\n  };\n}\n\nconst PICTURE_INSTANCE = new PictureModel();\n\nexport default PICTURE_INSTANCE;\n","import React, { Component } from \"react\";\nimport { Icon, Button, Row, Input, Col } from \"antd\";\nimport { Logo, Nav } from \"../styles/Navbar\";\nimport PictureModel from \"../models/PictureModel\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <Nav>\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n          <Col span={2}>\n            <Logo>PicShare</Logo>\n          </Col>\n          <Col span={8}>\n            <Input\n              placeholder=\"Search\"\n              onChange={e => PictureModel.searchImage(e.target.value)}\n              prefix={\n                <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n              }\n            />\n          </Col>\n          <Col span={8}>\n            <Row>\n              <Col span={4}>\n                <Button size=\"large\" icon=\"plus\" onClick={this.props.showModal}>\n                  Upload Image\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Icon, Button, Row, Modal, Input, Col, Upload } from \"antd\";\nimport { extendObservable } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport PictureModel from \"../models/PictureModel\";\n\nclass UploadModal extends Component {\n  constructor(props) {\n    super(props);\n    extendObservable(this, {\n      url: \"\",\n      title: \"\",\n      file: \"\",\n      fileList: []\n    });\n  }\n\n  handleUpload = () => {\n    PictureModel.addPic({\n      Image: this.url || this.file.result,\n      title: this.title\n    });\n    this.fileList = [];\n    this.url = \"\";\n    this.title = \"\";\n    this.props.handleCancel();\n  };\n\n  actionFileUpload = e => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve();\n      reader.onerror = error => reject(error);\n      reader.readAsDataURL(e);\n      this.file = reader;\n      this.url = \"\";\n    });\n  };\n\n  render() {\n    return (\n      <Modal\n        title=\"Upload Image\"\n        visible={this.props.visible}\n        onCancel={this.props.handleCancel}\n        footer={[\n          <Button key=\"cancel\" onClick={this.props.handleCancel}>\n            Cancel\n          </Button>,\n          <Button key=\"upload\" type=\"primary\" onClick={this.handleUpload}>\n            Upload\n          </Button>\n        ]}\n      >\n        <Row type=\"flex\" justify=\"center\" align=\"middle\">\n          <Col span={8}>\n            <Upload\n              fileList={this.fileList}\n              onChange={e => {\n                e.file.status = \"done\";\n                e.file.error = null;\n                this.fileList = [e.file];\n              }}\n              action={this.actionFileUpload}\n            >\n              <Button>\n                <Icon type=\"upload\" /> Click to Upload\n              </Button>\n            </Upload>\n          </Col>\n          <Col span={2}>OR</Col>\n          <Col span={12}>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter URL of the image\"\n              value={this.url}\n              onChange={e => {\n                this.url = e.target.value;\n              }}\n            />\n          </Col>\n        </Row>\n        <Row\n          type=\"flex\"\n          justify=\"center\"\n          align=\"middle\"\n          style={{ paddingTop: \"1em\" }}\n        >\n          <Col span={22}>\n            <Input\n              type=\"text\"\n              placeholder=\"Enter Title\"\n              value={this.title}\n              onChange={e => {\n                this.title = e.target.value;\n              }}\n            />\n          </Col>\n        </Row>\n      </Modal>\n    );\n  }\n}\n\nexport default observer(UploadModal);\n","import styled from \"styled-components\";\n\nexport const Picture = styled.div`\n  width: 30em;\n  display: inline-block;\n  padding: 1em;\n`;\n\nexport const Thumbnail = styled.div`\n  background-image: ${props => props.url || \"\"};\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n  border-bottom: 1px solid #eeeeee;\n  width: 27.84em;\n  height: 18em;\n`;\n","import React, { Component } from \"react\";\nimport { Card, Button, Row } from \"antd\";\nimport timeAgo from \"node-time-ago\";\nimport { Picture, Thumbnail } from \"../styles/PictureCard\";\nconst { Meta } = Card;\n\nexport default class PictureCard extends Component {\n  render() {\n    return (\n      <Picture>\n        <Card cover={<Thumbnail url={`url(${this.props.pic.imageData})`} />}>\n          <Meta\n            title={\n              <Row type=\"flex\" justify=\"space-between\">\n                {this.props.pic.title}\n                <Button\n                  shape=\"circle\"\n                  icon=\"delete\"\n                  type=\"danger\"\n                  onClick={this.props.onClick}\n                />\n              </Row>\n            }\n            description={timeAgo(this.props.pic.timestamp)}\n          />\n        </Card>\n      </Picture>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Container } from \"../styles/Home\";\nimport Navbar from \"../components/Navbar\";\nimport UploadModal from \"../components/UploadModal\";\nimport PictureCard from \"../components/PictureCard\";\nimport PictureModel from \"../models/PictureModel\";\nimport { extendObservable } from \"mobx\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    extendObservable(this, {\n      modalVisible: false,\n      search: \"\"\n    });\n  }\n\n  showModal = () => {\n    this.modalVisible = true;\n  };\n\n  handleCancel = e => {\n    this.modalVisible = false;\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar showModal={this.showModal} />\n        <Container>\n          <UploadModal\n            visible={this.modalVisible}\n            handleCancel={this.handleCancel}\n            handleOk={this.handleOk}\n          />\n          {PictureModel.data.map(pic => (\n            <PictureCard\n              key={pic.id}\n              pic={pic}\n              onClick={() => {\n                PictureModel.deletePic(pic.id);\n              }}\n            />\n          ))}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","import React from \"react\";\nimport Home from \"./pages/Home\";\n\nconst AppRouter = () => <Home />;\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}