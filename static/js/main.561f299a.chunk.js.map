{"version":3,"sources":["styles/PictureCard.js","components/PictureCard.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Picture","styled","div","_templateObject","Thumbnail","_templateObject2","props","url","Meta","PictureCard","react_default","a","createElement","card","cover","concat","this","pic","Image","title","row","type","justify","es_button","shape","icon","onClick","description","timeAgo","timestamp","Component","Container","Home_templateObject","Nav","Home_templateObject2","Logo","_templateObject3","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sortPics","data","sort","x","y","Date","parse","showModal","setState","modalVisible","handleOk","pictureUrl","state","file","result","new_data","localStorage","setItem","JSON","stringify","fileList","handleCancel","e","search","getItem","_this2","align","col","span","input","placeholder","onChange","text","target","value","searchData","filter","d","toLowerCase","startsWith","prefix","style","color","size","modal","visible","onCancel","footer","key","upload","error","status","action","console","log","Promise","resolve","reject","reader","FileReader","onload","onerror","readAsDataURL","paddingTop","map","index","PictureCard_PictureCard","pics","splice","AppRouter","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.561f299a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Picture = styled.div`\n  width: 30em;\n  display: inline-block;\n  padding: 1em;\n`;\n\nexport const Thumbnail = styled.div`\n  background-image: ${props => props.url || \"\"};\n  background-size: 100%;\n  background-repeat: no-repeat;\n  background-position: center center;\n  border-bottom: 1px solid #eeeeee;\n  width: 27.84em;\n  height: 18em;\n`;\n","import React, { Component } from \"react\";\nimport { Card, Button, Row } from \"antd\";\nimport timeAgo from \"node-time-ago\";\nimport { Picture, Thumbnail } from \"../styles/PictureCard\";\nconst { Meta } = Card;\n\nexport default class PictureCard extends Component {\n  render() {\n    return (\n      <Picture>\n        <Card cover={<Thumbnail url={`url(${this.props.pic.Image})`} />}>\n          <Meta\n            title={\n              <Row type=\"flex\" justify=\"space-between\">\n                {this.props.pic.title}\n                <Button\n                  shape=\"circle\"\n                  icon=\"delete\"\n                  type=\"danger\"\n                  onClick={this.props.onClick}\n                />\n              </Row>\n            }\n            description={timeAgo(this.props.pic.timestamp)}\n          />\n        </Card>\n      </Picture>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon, Button, Row, Modal, Input, Col, Upload } from \"antd\";\nimport PictureCard from \"../components/PictureCard\";\n\nconst Container = styled.div`\n  padding-top: 2em;\n  padding-left: 1em;\n`;\n\nconst Nav = styled.div`\n  padding-top: 1em;\n  padding-bottom: 1em;\n  border-bottom: 1px solid #eeeeee;\n`;\n\nconst Logo = styled.div`\n  font-size: 2em;\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      url: \"\",\n      modalVisible: false,\n      title: \"\",\n      search: \"\",\n      file: \"\",\n      fileList: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.sortPics(JSON.parse(localStorage.getItem(\"img_data\")) || [])\n    });\n  }\n\n  sortPics = data => {\n    let pics = data.sort(function(x, y) {\n      return Date.parse(y.timestamp) - Date.parse(x.timestamp);\n    });\n    return pics;\n  };\n\n  showModal = () => {\n    this.setState({\n      modalVisible: true\n    });\n  };\n\n  handleOk = () => {\n    let pictureUrl = this.state.url;\n    if (!pictureUrl) pictureUrl = this.state.file.result;\n    let new_data = this.state.data.concat({\n      Image: pictureUrl,\n      timestamp: new Date(),\n      title: this.state.title\n    });\n    localStorage.setItem(\"img_data\", JSON.stringify(new_data));\n    this.setState({\n      data: this.sortPics(new_data),\n      modalVisible: false,\n      url: \"\",\n      title: \"\",\n      fileList: []\n    });\n  };\n\n  handleCancel = e => {\n    this.setState({\n      modalVisible: false\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav>\n          <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n            <Col span={2}>\n              <Logo>PicShare</Logo>\n            </Col>\n            <Col span={8}>\n              <div>\n                <Input\n                  placeholder=\"Search\"\n                  onChange={e => {\n                    let text = e.target.value;\n                    let searchData = JSON.parse(\n                      localStorage.getItem(\"img_data\")\n                    ).filter(d => {\n                      if (text === \"\") return true;\n                      return d.title\n                        .toLowerCase()\n                        .startsWith(text.toLowerCase());\n                    });\n                    this.setState({ data: this.sortPics(searchData) });\n                  }}\n                  prefix={\n                    <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                />\n              </div>\n            </Col>\n            <Col span={8}>\n              <Row>\n                <Col span={4}>\n                  <Button size=\"large\" icon=\"plus\" onClick={this.showModal}>\n                    Upload Image\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Nav>\n        <Container>\n          <Modal\n            title=\"Upload Image\"\n            visible={this.state.modalVisible}\n            onCancel={this.handleCancel}\n            footer={[\n              <Button key=\"cancel\" onClick={this.handleCancel}>\n                Cancel\n              </Button>,\n              <Button key=\"upload\" type=\"primary\" onClick={this.handleOk}>\n                Upload\n              </Button>\n            ]}\n          >\n            <Row type=\"flex\" justify=\"center\" align=\"middle\">\n              <Col span={8}>\n                <Upload\n                  fileList={this.state.fileList}\n                  onChange={e => {\n                    e.file.error = null;\n                    e.file.status = \"done\";\n                    this.setState({ fileList: [e.file] });\n                  }}\n                  action={e => {\n                    console.log(e);\n                    return new Promise((resolve, reject) => {\n                      const reader = new FileReader();\n                      reader.onload = () => resolve(\"reader.result\");\n                      reader.onerror = error => reject(error);\n                      reader.readAsDataURL(e);\n                      this.setState({ file: reader, url: \"\" });\n                    });\n                  }}\n                >\n                  <Button>\n                    <Icon type=\"upload\" /> Click to Upload\n                  </Button>\n                </Upload>\n              </Col>\n              <Col span={2}>OR</Col>\n              <Col span={12}>\n                <Input\n                  type=\"text\"\n                  placeholder=\"Enter URL of the image\"\n                  value={this.state.url}\n                  onChange={e => {\n                    this.setState({ url: e.target.value });\n                  }}\n                />\n              </Col>\n            </Row>\n            <Row\n              type=\"flex\"\n              justify=\"center\"\n              align=\"middle\"\n              style={{ paddingTop: \"1em\" }}\n            >\n              <Col span={22}>\n                <Input\n                  type=\"text\"\n                  placeholder=\"Enter Title\"\n                  value={this.state.title}\n                  onChange={e => {\n                    this.setState({ title: e.target.value });\n                  }}\n                />\n              </Col>\n            </Row>\n          </Modal>\n          {this.state.data.map((pic, index) => (\n            <PictureCard\n              key={index}\n              pic={pic}\n              onClick={() => {\n                let pics = this.state.data;\n                pics.splice(index, 1);\n                localStorage.setItem(\"img_data\", JSON.stringify(pics));\n                this.setState({\n                  data: this.sortPics(pics)\n                });\n              }}\n            />\n          ))}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\n\nconst AppRouter = () => <Home />;\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}